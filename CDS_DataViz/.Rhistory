getwd()
setwd("/Users/rachellim/CUSP/CDS_DataViz")
getwd()
# Install the required packages
# install.packages("ggplot2")
# Libraries
library("ggplot2")
library(dplyr)
library(magrittr)
#read in data
wdf = read.csv("winter.csv")
head(wdf)
#read in data
wdf = read.csv("winter.csv")
head(wdf)
View(wdf)
#read in data
wdf = read.csv("winter.csv")
head(wdf)
ddf = read.csv("dictionary.csv")
head(ddf)
View(ddf)
View(wdf)
View(ddf)
df <- wdf %>%
group_by(Country, Medal) %>%
summarise(Medal_count = sum(Medal))
df <- wdf %>%
group_by(Country, Medal) %>%
summarise(Medal_count = count(Medal))
df <- wdf %>%
group_by(Country, Medal) %>%
summarise(Medal_count = length(Medal))
df
df <- wdf %>%
group_by(Country, Medal) %>%
summarise(Medal_count = length(Medal))
View(df)
setdiff(df,ddf)
setdiff(df$Country,ddf$Code)
#identify countries that are defunct(?)
defunct <- setdiff(df$Country,ddf$Code)
df$Country != defunct
df[df$Country != defunct]
df[df$Country != defunct, ]
#drop records for these countries
df[df$Country != defunct, ]
#drop records for these countries
df <- df[df$Country != defunct, ]
View(df)
df$Country
defunct
df$Country != defunct
df <- wdf %>%
group_by(Country, Medal) %>%
summarise(Medal_count = length(Medal))
#identify countries that are defunct(?)
defunct <- setdiff(df$Country,ddf$Code)
df$Country != defunct
c(defunct)
df[!grepl(defunct, df$Country),]
#groupby country for medal tally
df <- wdf %>%
group_by(Country, Medal) %>%
summarise(Medal_count = length(Medal))
#identify countries that are defunct(?)
defunct <- setdiff(df$Country,ddf$Code)
main_data2 <- main_data[ ! main_data$NAMES %in% NAMES_list, ]
df1 <-df[ ! df$Country %in% defunct, ]
View(df1)
transform(df1)
reshape(df1)
melt(t(df1))
install.packages("melt")
library(lattice)
barchart(Var1~value,groups=Var2,data=dd,stack=TRUE,
auto.key = list(space = "right"),
prepanel = function(x,y, ...) {
list(xlim = c(2, 2*max(x, na.rm = TRUE)))
})
library(lattice)
install.packages("lattice")
library(lattice)
barchart(Medal ~ Medal_count, groups=Country, data=df1, stack=True)
barchart(Medal ~ Medal_count, groups=Country, data=df1, stack=TRUE)
barchart(Country ~ Medal_count, groups=Medal, data=df1, stack=TRUE)
list(xlim = c(2, 2*max(x, na.rm = TRUE)))
#plot medal tally for all countries
barchart(Medal ~ Medal_count, groups=Country, data=df1, stack=TRUE, auto.key = list(space = "right")
#plot medal tally for all countries
barchart(Medal ~ Medal_count, groups=Country, data=df1, stack=TRUE, auto.key = list(space = "right"))
#plot medal tally for all countries
barchart(Medal ~ Medal_count, groups=Country, data=df1, stack=TRUE)
#plot medal tally for all countries
barchart(Country ~ Medal_count, groups=Medal, data=df1, stack=TRUE)
#plot medal tally for all countries
barchart(Country ~ Medal_count, groups=Medal, data=df1, stack=TRUE)
#plot medal tally for all countries
barchart(Country ~ Medal_count, groups=Medal, data=df1, stack=TRUE, legend=TRUE)
barchart(Country ~ Medal_count, groups=Medal, data=df1, stack=TRUE)
aggregate(df1$Medal_count, by=list(Category=df1$Country), FUN=sum)
#filter for top 10
df10 <- order(aggregate(df1$Medal_count, by=list(Category=df1$Country), FUN=sum))
df10
#filter for top 10
df10 <- aggregate(df1$Medal_count, by=list(Category=df1$Country), FUN=sum)
df10
order(df10)
order(df10$x)
df10$x
sort(df10$x)
sort(df10)
sort(df10$x)[-10:]
sort[(df10$x,)][-10:]
head(sort(df10$x, descreasing=TRUE), n=10)
library(plyr)
head(arrange(df10, desc(x), n=10))
head(df10[order(df10$x, decreasing=TRUE), ], 10)
df10$Category
df10 <- head(df10[order(df10$x, decreasing=TRUE), ], 10)
df10$Category
df10
df10$Category
df1[df1$Country %in% df10$Category, ]
df10 <- df1[df1$Country %in% df10$Category, ]
View(df10)
#filter for top 10
df10 <- aggregate(df1$Medal_count, by=list(Category=df1$Country), FUN=sum)
dfsum <- head(df10[order(df10$x, decreasing=TRUE), ], 10)
dftop10 <- df1[df1$Country %in% df10$Category, ]
View(dfsum)
#plot total medal count for top 10
barchart(Category ~ x, data=df1, stack=TRUE, legend=TRUE)
#plot total medal count for top 10
barchart(Category ~ x, data=dfsum, stack=TRUE, legend=TRUE)
#plot total medal count for top 10
barchart(Category ~ x, data=dfsum)
library(lattice)
#plot total medal count for top 10
barchart(Category ~ x, data=dfsum)
#plot total medal count for top 10
barchart(Category ~ x, data=dfsum, col="blue")
#plot total medal count for top 10
barchart(Category ~ x, data=dfsum, col="green")
#plot total medal count for top 10
barchart(Category ~ x, data=dfsum, col="blue")
df10 <- aggregate(df1$Medal_count, by=list(Category=df1$Country), FUN=sum)
dfsum <- head(df10[order(df10$x, decreasing=TRUE), ], 10)
dftop10 <- df1[df1$Country %in% df10$Category, ]
#plot total medal count for top 10
barchart(Category ~ x, data=dfsum, col="blue")
barchart(reorder(Category ~ x, data=dfsum, col="blue"))
barchart(Category ~ reorder(x), data=dfsum, col="blue")
View(df1)
View(wdf)
View(wdf)
df <- wdf %>%
group_by(Country, Medal) %>%
summarise(Medal_count = length(Medal)) %>%
summarise(Gender = length(Gender))
library(magrittr)
df <- wdf %>%
group_by(Country, Medal) %>%
summarise(Medal_count = length(Medal)) %>%
summarise(Gender = length(Gender))
df <- wdf %>%
group_by(Country, Medal) %>%
summarise(Medal_count = length(Medal)) %>%
summarise(Gender = length(Gender))
# Libraries
library("ggplot2")
library(dplyr)
library(magrittr)
library(lattice)
#read in data
wdf = read.csv("winter.csv")
head(wdf)
ddf = read.csv("dictionary.csv")
head(ddf)
#groupby country for medal tally
df <- wdf %>%
group_by(Country, Medal) %>%
summarise(Medal_count = length(Medal)) %>%
summarise(Gender = length(Gender))
View(df)
df <- wdf %>%
group_by(Country, Medal, Gender) %>%
summarise(Medal_count = length(Medal)) %>%
summarise(Gender = length(Gender))
View(df)
df <- wdf %>%
group_by(Country, Medal, Gender) %>%
summarise(Medal_count = length(Medal))
#read in data
wdf = read.csv("winter.csv")
head(wdf)
ddf = read.csv("dictionary.csv")
head(ddf)
#groupby country for medal tally
df <- wdf %>%
group_by(Country, Medal, Gender) %>%
summarise(Medal_count = length(Medal))
#identify countries that are defunct(?)
defunct <- setdiff(df$Country,ddf$Code)
#drop records for these countries
df1 <-df[ ! df$Country %in% defunct, ]
#plot medal tally for all countries
barchart(Country ~ Medal_count, groups=Medal, data=df1, stack=TRUE, legend=TRUE)
#plot medal tally for all countries
barchart(Country ~ Medal_count, groups=Medal, data=df1, stack=TRUE, legend=TRUE)
df1
#groupby country for medal tally
df <- wdf %>%
group_by(Country, Medal) %>%
summarise(Medal_count = length(Medal))
#identify countries that are defunct(?)
defunct <- setdiff(df$Country,ddf$Code)
#drop records for these countries
df1 <-df[ ! df$Country %in% defunct, ]
#plot medal tally for all countries
barchart(Country ~ Medal_count, groups=Medal, data=df1, stack=TRUE, legend=TRUE)
View(df1)
#plot medal tally for all countries
barchart(Country ~ Medal_count, groups=Medal, data=df1, stack=TRUE, legend=TRUE)
barchart(Country ~ Medal_count, groups=Medal, data=df1, stack=TRUE, legend=TRUE)
is.atomic(df1)
#plot medal tally for all countries
barchart(Country ~ Medal_count, groups=Medal, data=df1, stack=TRUE, legend=TRUE)
#drop records for these countries
df1 <-df[ ! df$Country %in% defunct, ]
#plot medal tally for all countries
barchart(Country ~ Medal_count, groups=Medal, data=df1, stack=TRUE, legend=TRUE)
#filter for top 10
df10 <- aggregate(df1$Medal_count, by=list(Category=df1$Country), FUN=sum)
dfsum <- head(df10[order(df10$x, decreasing=TRUE), ], 10)
dftop10 <- df1[df1$Country %in% df10$Category, ]
#plot total medal count for top 10
barchart(Category ~ x, data=dfsum, col="blue")
View(df1)
# Install the required packages
# install.packages("ggplot2")
# Libraries
library("ggplot2")
library(dplyr)
library(magrittr)
library(lattice)
#read in data
wdf = read.csv("winter.csv")
head(wdf)
ddf = read.csv("dictionary.csv")
head(ddf)
#groupby country for medal tally
df <- wdf %>%
group_by(Country, Medal, Gender) %>%
summarise(Medal_count = length(Medal))
#identify countries that are defunct(?)
defunct <- setdiff(df$Country,ddf$Code)
#drop records for these countries
df1 <-df[ ! df$Country %in% defunct, ]
#plot medal tally for all countries
barchart(Country ~ Medal_count, groups=Medal, data=df1, stack=TRUE, legend=TRUE)
#filter for top 10
df10 <- aggregate(df1$Medal_count, by=list(Category=df1$Country), FUN=sum)
dfsum <- head(df10[order(df10$x, decreasing=TRUE), ], 10)
dftop10 <- df1[df1$Country %in% df10$Category, ]
#plot total medal count for top 10
barchart(Category ~ x, data=dfsum, col="blue")
#plot medal tally for all countries
barchart(Country ~ Medal_count, groups=Medal, data=df1, stack=TRUE)
#plot medal tally for all countries
barchart(Country ~ Medal_count, groups=Medal, Gender, data=df1, stack=TRUE)
groupby country for medal tally
df <- wdf %>%
group_by(Country, Medal) %>%
summarise(Medal_count = length(Medal))
#identify countries that are defunct(?)
defunct <- setdiff(df$Country,ddf$Code)
#drop records for these countries
df1 <-df[ ! df$Country %in% defunct, ]
#plot medal tally for all countries
barchart(Country ~ Medal_count, groups=Medal, data=df1, stack=TRUE)
#filter for top 10
df10 <- aggregate(df1$Medal_count, by=list(Category=df1$Country), FUN=sum)
dfsum <- head(df10[order(df10$x, decreasing=TRUE), ], 10)
dftop10 <- df1[df1$Country %in% df10$Category, ]
#plot total medal count for top 10
barchart(Category ~ x, data=dfsum, col="blue")
dfg <- wdf %>%
group_by(Country, Medal, Gender) %>%
summarise(Medal_count = length(Medal))
View(dfg)
aggregate(dfg$Medal_count, by=list(Category=df1$Country, df1$Gender), FUN=sum)
library(ddply)
library(plyr)
ddply(dfg, .(Country, Gender), numcolwise(sum))
dfg <- ddply(dfg, .(Country, Gender), numcolwise(sum))
View(dftop10)
View(df1)
dfg[dfg$Country %in% df10$Category, ]
#filter for top 10
df10 <- aggregate(df1$Medal_count, by=list(Category=df1$Country), FUN=sum)
dfsum <- head(df10[order(df10$x, decreasing=TRUE), ], 10)
dftop10 <- df1[df1$Country %in% df10$Category, ]
dfg[dfg$Country %in% df10$Category, ]
dfg10 <- dfg[dfg$Country %in% df10$Category, ]
View(dfg10)
df10$Category
View(df10)
View(dftop10)
View(dfg)
df <- wdf %>%
group_by(Country, Medal) %>%
summarise(Medal_count = length(Medal))
#identify countries that are defunct(?)
defunct <- setdiff(df$Country,ddf$Code)
#drop records for these countries
df1 <-df[ ! df$Country %in% defunct, ]
#plot medal tally for all countries
barchart(Country ~ Medal_count, groups=Medal, data=df1, stack=TRUE)
#filter for top 10
df10 <- aggregate(df1$Medal_count, by=list(Category=df1$Country), FUN=sum)
dfsum <- head(df10[order(df10$x, decreasing=TRUE), ], 10)
df10
dfsum
dftop10 <- df1[df1$Country %in% dfsum$Category, ]
dfg10 <- dfg[dfg$Country %in% dfsum$Category, ]
View(dfg10)
barchart(Country ~ Medal_count, groups=Gender, data=dfg10, stack=TRUE)
View(ddf)
View(wdf)
View(dfsum)
View(dftop10)
View(dfg)
dfg <- wdf %>%
group_by(Country, Medal, Gender) %>%
summarise(Medal_count = length(Medal))
View(dfg)
#country-wise medal sum by gender
dfg <- ddply(dfg, .(Country, Gender), numcolwise(sum))
View(dfg)
View(ddf)
View(wdf)
View(df1)
View(df)
aggregate(MedalCount ~ Country, df1, sum)
aggregate(Medal_count ~ Country, df1, sum)
## QUESTION 2 ##
#using sum of number of medals
dfMedalSum <- aggregate(Medal_count ~ Country, df1, sum)
View(dfMedalSum)
View(df10)
View(dfMedalSum)
View(df10)
View(wdf)
dfw[dfw$Country %in% df10$Category, ]
wdf[wdf$Country %in% df10$Category, ]
View(ddf)
ddf[ddf$Code %in% df10$Category, ]
merge(df10, ddf, by='Code')
merge(df10, ddf, by=c('Country', 'Code')
merge(df10, ddf, by=c('Country', 'Code')
merge(df10, ddf, by=c('Country', 'Code'))
View(df10)
merge(df10, ddf, by.x = "Category", by.y = "Code")
#first merge winter and dictionary
m1 <- merge(df10, ddf, by.x = "Category", by.y = "Code")
View(m1)
m1$pop_medal <- m1$Population / m1$x
#adjust ranking by gdp per capita / medal
m1$gdp_medal <- m1$GDP.per.Capita / m1$x
m1$gdp_rank <- NA
View(m1)
m1$rank[order.gdp_mdeal] <- 1:nrow(m1)
m1$rank[order.gdp_medal] <- 1:nrow(m1)
order.gdp_medal <- order(m1$gdp_medal)
m1$rank[order.gdp_medal] <- 1:nrow(m1)
m1$gdp_rank[order.gdp_medal] <- 1:nrow(m1)
#re-rank
m1$gdp_rank <- NA
# Install the required packages
# install.packages("ggplot2")
# Libraries
library("ggplot2")
library(dplyr)
library(magrittr)
library(lattice)
#read in data
wdf = read.csv("winter.csv")
head(wdf)
ddf = read.csv("dictionary.csv")
head(ddf)
#groupby country for medal tally
df <- wdf %>%
group_by(Country, Medal) %>%
summarise(Medal_count = length(Medal))
#identify countries that are defunct(?)
defunct <- setdiff(df$Country,ddf$Code)
#drop records for these countries
df1 <-df[ ! df$Country %in% defunct, ]
#plot medal tally for all countries
barchart(Country ~ Medal_count, groups=Medal, data=df1, stack=TRUE)
#filter for top 10
df10 <- aggregate(df1$Medal_count, by=list(Category=df1$Country), FUN=sum)
dfsum <- head(df10[order(df10$x, decreasing=TRUE), ], 10)
dftop10 <- df1[df1$Country %in% df$Category, ]
#plot total medal count for top 10
barchart(Category ~ x, data=dfsum, col="blue")
#grouping by gender
dfg <- wdf %>%
group_by(Country, Medal, Gender) %>%
summarise(Medal_count = length(Medal))
#country-wise medal sum by gender
dfg <- ddply(dfg, .(Country, Gender), numcolwise(sum))
dfg10 <- dfg[dfg$Country %in% dfsum$Category, ]
#plot medal count by gender
barchart(Country ~ Medal_count, groups=Gender, data=dfg10, stack=TRUE)
## QUESTION 2 ##
#using sum of number of medals (df10)
#first merge winter and dictionary
m1 <- merge(df10, ddf, by.x = "Category", by.y = "Code")
#recalculate scoring
m1$gdp_medal <- m1$GDP.per.Capita / m1$x
m1$pop_medal <- m1$Population / m1$x
#re-rank
m1$gdp_rank <- NA
m1$gdp_rank[order.gdp_medal] <- 1:nrow(m1)
order.gdp_medal <- order(m1$gdp_rank)
order.gdp_medal <- order(m1$gdp_rank)
View(m1)
m1$gdp_rank[order.gdp_medal] <- 1:nrow(m1)
order.gdp_medal <- order(m1$gdp_rank)
order.gdp_medal
#first merge winter and dictionary
m1 <- merge(df10, ddf, by.x = "Category", by.y = "Code")
#recalculate scoring
m1$gdp_medal <- m1$GDP.per.Capita / m1$x
m1$pop_medal <- m1$Population / m1$x
#re-rank
m1$gdp_rank <- NA
order.gdp_medal <- order(m1$gdp_rank)
order.gdp_medal
m1$gdp_rank[order.gdp_medal] <- 1:nrow(m1)
View(m1)
m1
order.gdp_rankmedal <- order(m1$gdp_medal)
order.gdp_rankmedal
m1$gdp_rank[order.gdp_medal] <- 1:nrow(m1)
View(m1)
m1$gdp_rank[order.gdp_rankmedal] <- 1:nrow(m1)
m1$gdp_rank <- NA
order.gdp_rankmedal <- order(m1$gdp_medal)
m1$gdp_rank[order.gdp_rankmedal] <- 1:nrow(m1)
#re-rank Population
m1$pop_rank <- NA
order.pop_rankmedal <- order(m1$pop_medal)
m1$pop_rank[order.pop_rankmedal] <- 1:nrow(m1)
m1$count_rank <- NA
order.count_rankmedal <- order(m1$x)
m1$x[order.count_rankmedal] <- 1:nrow(m1)
order.count_rankmedal
m1$x[order.count_rankmedal] <- 1:nrow(m1)
View(m1)
m1$count_rank <- NA
order.count_rank <- order(m1$x)
m1$x[order.count_rank] <- 1:nrow(m1)
View(m1)
m1$count_rank <- NA
order.count_rankmedal <- order(m1$x)
m1$count_rank[order.count_rankmedal] <- 1:nrow(m1)
head(m1)
ggplot(m1, aes(x = Category)) +
geom_line(aes(y = gdp_rank), colour="blue") +
geom_line(aes(y = pop_rank), colour = "red") +
geom_line(aes(y = count_rank), colour = "green") +
ylab(label="Countries") +
xlab("Medal Ranking")
#plotting ranking
p <- plot_ly(
x = m1$Category,
y = m1$gdp_medal,
name = "gdp",
type = "bar"
)
library(plotly)
#plotting ranking
p <- plot_ly(
x = m1$Category,
y = m1$gdp_medal,
name = "gdp",
type = "bar"
)
p <- plot_ly(
x = m1$Category,
y = m1$gdp_medal,
name = "gdp",
type = "bar"
)
#plotting ranking
plot_ly(
x = m1$Category,
y = m1$gdp_medal,
name = "gdp",
type = "bar"
)
View(m1)
#plotting ranking
plot_ly(
x = m1$Category,
y = m1$gdp_rank,
name = "gdp",
type = "bar"
)
